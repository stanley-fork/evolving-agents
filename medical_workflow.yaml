scenario_name: Patient Health Assessment Workflow
domain: general
description: >
  This workflow automates the process of assessing patient health by extracting data from patient records, calculating BMI and risk scores, analyzing the data, generating recommendations, and compiling a comprehensive report.

steps:
  - type: DEFINE
    item_type: AGENT
    name: DataExtractionAgent
    code_snippet: |
      class DataExtractionAgent:
          def extract_data(self, patient_records):
              # Implement data extraction logic here
              return physiological_data

  - type: DEFINE
    item_type: AGENT
    name: BMICalculationAgent
    code_snippet: |
      class BMICalculationAgent:
          def calculate_bmi(self, physiological_data):
              # Implement BMI calculation and classification logic here
              return bmi_data

  - type: DEFINE
    item_type: AGENT
    name: RiskScoreCalculationAgent
    code_snippet: |
      class RiskScoreCalculationAgent:
          def calculate_risk_score(self, physiological_data):
              # Implement risk score calculation using MedicalFormulaLibrary
              return risk_score_data

  - type: DEFINE
    item_type: AGENT
    name: DataAnalysisAgent
    code_snippet: |
      class DataAnalysisAgent:
          def analyze_data(self, bmi_data, risk_score_data):
              # Implement data analysis and clinical interpretation logic here
              return analysis_results

  - type: DEFINE
    item_type: AGENT
    name: RecommendationGenerationAgent
    code_snippet: |
      class RecommendationGenerationAgent:
          def generate_recommendations(self, analysis_results):
              # Implement recommendation generation logic here
              return recommendations

  - type: DEFINE
    item_type: AGENT
    name: ReportGenerationAgent
    code_snippet: |
      class ReportGenerationAgent:
          def generate_report(self, analysis_results, recommendations):
              # Implement report generation logic here
              return patient_assessment_report

  - type: CREATE
    item_type: AGENT
    name: DataExtractionAgentInstance
    reference: DataExtractionAgent

  - type: CREATE
    item_type: AGENT
    name: BMICalculationAgentInstance
    reference: BMICalculationAgent

  - type: CREATE
    item_type: AGENT
    name: RiskScoreCalculationAgentInstance
    reference: RiskScoreCalculationAgent

  - type: CREATE
    item_type: AGENT
    name: DataAnalysisAgentInstance
    reference: DataAnalysisAgent

  - type: CREATE
    item_type: AGENT
    name: RecommendationGenerationAgentInstance
    reference: RecommendationGenerationAgent

  - type: CREATE
    item_type: AGENT
    name: ReportGenerationAgentInstance
    reference: ReportGenerationAgent

  - type: EXECUTE
    item_type: AGENT
    name: DataExtractionAgentInstance
    input_data: |
      patient_records: "Sample patient records data"
    output: physiological_data

  - type: EXECUTE
    item_type: AGENT
    name: BMICalculationAgentInstance
    input_data: |
      physiological_data: "Output from DataExtractionAgentInstance"
    output: bmi_data

  - type: EXECUTE
    item_type: AGENT
    name: RiskScoreCalculationAgentInstance
    input_data: |
      physiological_data: "Output from DataExtractionAgentInstance"
    output: risk_score_data

  - type: EXECUTE
    item_type: AGENT
    name: DataAnalysisAgentInstance
    input_data: |
      bmi_data: "Output from BMICalculationAgentInstance"
      risk_score_data: "Output from RiskScoreCalculationAgentInstance"
    output: analysis_results

  - type: EXECUTE
    item_type: AGENT
    name: RecommendationGenerationAgentInstance
    input_data: |
      analysis_results: "Output from DataAnalysisAgentInstance"
    output: recommendations

  - type: EXECUTE
    item_type: AGENT
    name: ReportGenerationAgentInstance
    input_data: |
      analysis_results: "Output from DataAnalysisAgentInstance"
      recommendations: "Output from RecommendationGenerationAgentInstance"
    output: patient_assessment_report