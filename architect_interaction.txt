TASK REQUIREMENT:

    Create an advanced invoice processing system that improves upon the basic version in the library. The system should:
    
    1. Use a more sophisticated document analyzer that can detect invoices with higher confidence
    2. Extract comprehensive information (invoice number, date, vendor, items, subtotal, tax, total)
    3. Verify calculations to ensure subtotal + tax = total
    4. Generate a structured summary with key insights
    5. Handle different invoice formats and detect potential errors
    
    The system should leverage existing components from the library when possible,
    evolve them where improvements are needed, and create new components for missing functionality.
    
    Please generate a complete workflow for this invoice processing system.
    

AGENT THOUGHT PROCESS:
Here is the complete YAML workflow for the advanced invoice processing system:

```yaml
scenario_name: Invoice Processing Workflow
domain: general
description: >
  This workflow processes raw invoice documents through a series of operations including document analysis, data extraction, calculation verification, summary generation, error detection, and component integration to produce a comprehensive invoice processing system.

steps:
  - type: DEFINE
    item_type: AGENT
    name: DocumentAnalyzerAgent
    code_snippet: |
      Develop an agent that uses the AdvancedDocumentAnalyzer tool to perform sophisticated analysis of invoice documents, ensuring high confidence in invoice detection and handling various formats.

  - type: DEFINE
    item_type: AGENT
    name: DataExtractionAgent
    code_snippet: |
      Develop an agent that utilizes the ComprehensiveDataExtractor tool to extract detailed information from invoices, including line items, totals, and tax information.

  - type: DEFINE
    item_type: AGENT
    name: CalculationVerificationAgent
    code_snippet: |
      Develop an agent that uses the CalculationVerifier tool to ensure the accuracy of invoice calculations, verifying that the subtotal plus tax equals the total.

  - type: DEFINE
    item_type: AGENT
    name: SummaryGenerationAgent
    code_snippet: |
      Develop an agent that uses the SummaryGenerator tool to create structured summaries of invoice data, highlighting key insights and metrics.

  - type: DEFINE
    item_type: AGENT
    name: ErrorDetectionAgent
    code_snippet: |
      Develop an agent that uses the ErrorDetector tool to identify and flag potential errors in invoices, such as missing fields or incorrect calculations.

  - type: DEFINE
    item_type: AGENT
    name: ComponentIntegrationAgent
    code_snippet: |
      Develop an agent responsible for integrating all components into a cohesive system, ensuring seamless data flow and interaction between agents and tools.

  - type: CREATE
    item_type: AGENT
    name: DocumentAnalyzerAgent

  - type: EXECUTE
    item_type: AGENT
    name: DocumentAnalyzerAgent
    user_input: |
      raw_invoice_documents

  - type: CREATE
    item_type: AGENT
    name: DataExtractionAgent

  - type: EXECUTE
    item_type: AGENT
    name: DataExtractionAgent
    user_input: |
      analyzed_invoice_documents

  - type: CREATE
    item_type: AGENT
    name: CalculationVerificationAgent

  - type: EXECUTE
    item_type: AGENT
    name: CalculationVerificationAgent
    user_input: |
      extracted_invoice_data

  - type: CREATE
    item_type: AGENT
    name: SummaryGenerationAgent

  - type: EXECUTE
    item_type: AGENT
    name: SummaryGenerationAgent
    user_input: |
      verified_invoice_data

  - type: CREATE
    item_type: AGENT
    name: ErrorDetectionAgent

  - type: EXECUTE
    item_type: AGENT
    name: ErrorDetectionAgent
    user_input: |
      verified_invoice_data

  - type: CREATE
    item_type: AGENT
    name: ComponentIntegrationAgent

  - type: EXECUTE
    item_type: AGENT
    name: ComponentIntegrationAgent
    user_input: |
      structured_invoice_summary
      error_report
```

This workflow defines the steps and agents required to process invoices, ensuring comprehensive analysis, extraction, verification, and integration.