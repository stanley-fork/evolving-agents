TASK REQUIREMENT:

    Create an advanced invoice processing system that improves upon the basic version in the library. The system should:
    
    1. Use a more sophisticated document analyzer that can detect invoices with higher confidence
    2. Extract comprehensive information (invoice number, date, vendor, items, subtotal, tax, total)
    3. Verify calculations to ensure subtotal + tax = total
    4. Generate a structured summary with key insights
    5. Handle different invoice formats and detect potential errors
    
    The system should leverage existing components from the library when possible,
    evolve them where improvements are needed, and create new components for missing functionality.
    
    Please generate a complete workflow for this invoice processing system.
    

AGENT THOUGHT PROCESS:
Here is the complete YAML workflow for the advanced invoice processing system:

```yaml
scenario_name: Invoice Processing Workflow
domain: general
description: >
  This workflow processes invoice documents by analyzing, extracting data, verifying calculations, detecting errors, generating summaries, and integrating components into a cohesive system. It also evolves the system by creating new components as needed.

steps:
  - type: EXECUTE
    item_type: AGENT
    name: DocumentAnalyzerAgent
    tool: AdvancedDocumentAnalyzer
    inputs:
      user_input: |
        Raw invoice documents to be analyzed
    outputs:
      - analyzed_invoice_documents

  - type: EXECUTE
    item_type: AGENT
    name: DataExtractionAgent
    tool: ComprehensiveDataExtractor
    inputs:
      - analyzed_invoice_documents
    outputs:
      - extracted_invoice_data

  - type: EXECUTE
    item_type: AGENT
    name: CalculationVerificationAgent
    tool: CalculationVerifier
    inputs:
      - extracted_invoice_data
    outputs:
      - verified_invoice_data

  - type: EXECUTE
    item_type: AGENT
    name: ErrorDetectionAgent
    tool: ErrorDetectionTool
    inputs:
      - verified_invoice_data
    outputs:
      - error_report

  - type: EXECUTE
    item_type: AGENT
    name: SummaryGenerationAgent
    tool: StructuredSummaryGenerator
    inputs:
      - verified_invoice_data
    outputs:
      - invoice_summary

  - type: DEFINE
    item_type: AGENT
    name: ComponentIntegrationAgent
    code_snippet: |
      # Middleware design for integrating agents and tools
      class ComponentIntegrationAgent:
          def integrate(self, inputs):
              # Logic to integrate components
              pass
    inputs:
      - analyzed_invoice_documents
      - extracted_invoice_data
      - verified_invoice_data
      - error_report
      - invoice_summary
    outputs:
      - integrated_system

  - type: EXECUTE
    item_type: AGENT
    name: ComponentIntegrationAgent
    inputs:
      - analyzed_invoice_documents
      - extracted_invoice_data
      - verified_invoice_data
      - error_report
      - invoice_summary
    outputs:
      - integrated_system

  - type: DEFINE
    item_type: AGENT
    name: ComponentEvolutionAgent
    code_snippet: |
      # Feedback loop implementation for system evolution
      class ComponentEvolutionAgent:
          def evolve(self, system):
              # Logic to assess and improve system components
              pass
    inputs:
      - integrated_system
    outputs:
      - evolved_system

  - type: EXECUTE
    item_type: AGENT
    name: ComponentEvolutionAgent
    inputs:
      - integrated_system
    outputs:
      - evolved_system

  - type: DEFINE
    item_type: AGENT
    name: ComponentCreationAgent
    code_snippet: |
      # Gap analysis and new component design
      class ComponentCreationAgent:
          def create(self, gaps):
              # Logic to design new components
              pass
    inputs:
      - identified_gaps
    outputs:
      - new_components

  - type: EXECUTE
    item_type: AGENT
    name: ComponentCreationAgent
    inputs:
      - identified_gaps
    outputs:
      - new_components
```

This workflow outlines the steps for processing invoices, including document analysis, data extraction, calculation verification, error detection, summary generation, and system integration and evolution.